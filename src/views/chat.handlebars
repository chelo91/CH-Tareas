<!--<div class="righted">
    <button id="btn-login" type="button" class="btn btn-primary">Login</button>
</div>-->
<div class="container chat-container">
    <div id="div-messages">
    </div>
    <input type="text" id="chat-input" class="form-control" placeholder="Escribe tu mensaje...">
</div>

<script src="socket.io/socket.io.js"></script>
<script>
    const socket = io();
    let products = [];
    let loggedEmail = "";
    const email = "{{user.email}}";
    document.addEventListener("DOMContentLoaded", function () {
        const inputChat = document.getElementById('chat-input');
        const btnLogin = document.getElementById('btn-login');
        const divMessages = document.getElementById("div-messages");
        /*btnLogin.addEventListener("click", async (e) => {
            const { value: email } = await Swal.fire({
                title: 'Login',
                input: 'email',
                inputLabel: 'Ingrese un email',
                inputPlaceholder: 'pepe@pepe.com'
            });
            if (email) {*/
        loggedEmail = email;
        Swal.fire(`Logueado con exito: ${email}`);
        socket.emit('login', email);
        document.getElementById("chat-input").disabled = false;
        /*}
    });*/

        socket.on('messages', (messages) => {
            messages.forEach((message) => {
                addMessage(message);
            });
        });
        socket.on('new-message', (message) => {
            addMessage(message);
        });
        inputChat.addEventListener('keydown', function (event) {
            if (event.key === 'Enter' || event.keyCode === 13) {
                if (inputChat.value !== '') {
                    const message = inputChat.value;
                    socket.emit('send-message', { email: loggedEmail, message: message, session: socket.id });
                    inputChat.value = '';
                }
            }
        });
        const addMessage = (message) => {
            const divMessage = document.createElement("div");

            if (message.email === loggedEmail) {
                divMessage.classList.add("user-message");
            }

            divMessage.classList.add("message");
            // Crear elementos para el email y el mensaje
            const emailElement = document.createElement("div");
            emailElement.classList.add("message-email");
            emailElement.textContent = message.email;

            const messageElement = document.createElement("div");
            messageElement.classList.add("message-text");
            messageElement.textContent = message.message;

            // Agregar los elementos al divMessage
            divMessage.appendChild(emailElement);
            divMessage.appendChild(messageElement);

            divMessages.appendChild(divMessage);
        };
    });
</script>

<style>
    .message-email {
        font-weight: bold;
    }

    .message-text {
        margin-top: 5px;
    }

    #div-messages {
        overflow-x: hidden;
        overflow-y: scroll;
        max-height: 70%;
    }

    .chat-container {
        max-width: 400px;
        margin: 0 auto;
    }

    .message {
        background-color: #f1f1f1;
        padding: 10px;
        margin: 10px 0;
        border-radius: 10px;
    }

    .user-message {
        background-color: #007bff;
        color: white;
        text-align: right;
    }

    .righted {
        text-align: right;
    }
</style>