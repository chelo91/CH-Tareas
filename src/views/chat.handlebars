<div class="container chat-container">
    {{> messages }}
    <input type="text" id="chat-input" class="form-control" placeholder="Escribe tu mensaje...">
</div>


<script src="socket.io/socket.io.js"></script>
<script>
    const socket = io();
    let products = [];

    document.addEventListener("DOMContentLoaded", function () {
        socket.on('products', (initialProducts) => {
            products = initialProducts;
            refreshTable();
        });

        socket.on('create-product', ({ product }) => {
            Swal.fire({
                icon: 'success',
                title: 'Producto creado',
                text: "" + product._id + " - " + product.title,
                timer: 1500,
                timerProgressBar: true
            });
            products.push(product);
            refreshTable();
        });

        socket.on('delete-product', ({ _id }) => {
            Swal.fire({
                icon: 'warning',
                title: 'Producto eliminado',
                text: "ID: " + _id,
                timer: 1500,
                timerProgressBar: true
            });
            products = products.filter(product => product._id !== _id);
            refreshTable();
        });

        function refreshTable() {
            const tbody = document.getElementById("tableProductsBody");
            tbody.innerHTML = "";
            products.forEach((product) => {
                const row = document.createElement("tr");
                row.innerHTML = `<td>${product._id}</td>
                                <td>${product.title}</td>
                                <td>${product.description}</td>
                                <td>${product.code}</td>
                                <td>${product.price}</td>
                                <td>${product.status}</td>
                                <td>${product.stock}</td>
                                <td>${product.category}</td>`;

                tbody.appendChild(row);
            });
        }
    });


    /*const messageList = document.getElementById('message-list');
    const messageInput = document.getElementById('message-input');
    const sendButton = document.getElementById('send-button');

    // Función para agregar un mensaje al DOM
    function addMessage(socketId, message) {
        const listItem = document.createElement('li');
        listItem.textContent = `${socketId}: ${message}`;
        messageList.appendChild(listItem);
    }

    // Escucha eventos 'message' y actualiza la lista de mensajes
    socket.on('product', ({ socketId, message }) => {
        addMessage(socketId, message);
    });

    // Escucha el evento 'messages' inicial para cargar los mensajes existentes
    socket.on('products', (initialMessages) => {
        initialMessages.forEach(({ socketId, message }) => {
            addMessage(socketId, message);
        });
    });

    // Enviar mensaje cuando se hace clic en el botón
    sendButton.addEventListener('click', () => {
        const message = messageInput.value;
        socket.emit('product', message);
        messageInput.value = '';
    });*/
</script>

<style>
    .chat-container {
        max-width: 400px;
        margin: 0 auto;
    }

    .message {
        background-color: #f1f1f1;
        padding: 10px;
        margin: 10px 0;
        border-radius: 10px;
    }

    .user-message {
        background-color: #007bff;
        color: white;
    }
</style>